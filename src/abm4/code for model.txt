import agentframework as af
import random
import agents:
a = agent.Agent(0, 0):
a.x = 3
print(a.x) # <-- Prints 3

Agent = []
n_iterations = 10

a = af.Agent(0,0)
print("type(a)", type(a))







# -*- coding: utf-8 -*-
"""
Created on Mon Feb 27 10:08:32 2023

@author: xiaoyu
"""

import agentframework as af

# Initialise agents
a = af.Agent()

def __str__(self):
    return self.__class__.__name__ + "(x=" + str(self.x) \
        + ", y=" + str(self.y) +")"
        
print("type(a)", type(a))
print(af.agents)










import agentframework as af
import random

random.seed(0)
n_agents = 10

# Initialise agents
a = af.Agent()

class Agent:
    def __init__(self):
        self.x = random.randint(0, 99)
        self.y = random.randint(0, 99)
    
    def __str__(self):
        return self.__class__.__name__ + "(x=" + str(self.x) \
            + ", y=" + str(self.y) + ")"

agents = Agent()
print(agents)










import agentframework as af
import random

random.seed(0)
n_agents = 10

# Initialise agents
a = af.Agent()
agents = []

class Agent:
    def __init__(self):
        self.x = random.randint(0, 99)
        self.y = random.randint(0, 99)
    
    def __str__(self):
        return self.__class__.__name__ + "(x=" + str(self.x) \
            + ", y=" + str(self.y) + ")"
                    
        for i in range(n_agents):
            # Create an agent
            agents.append([random.randint(0, 99), random.randint(0, 99)])
            print(agents[i])

agents = Agent()
print(agents)









import agentframework as af

n_agents = 10

# Initialise agents
a = af.Agent()
agents = []

for i in range(n_agents):
    # Create an agent
    agents.append(af.Agent())
    print(agents[i])
print(agents)